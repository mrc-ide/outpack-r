% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logging.R
\name{outpack_log}
\alias{outpack_log}
\alias{outpack_log_info}
\alias{outpack_log_debug}
\alias{outpack_log_trace}
\title{Create log entry}
\usage{
outpack_log(object, log_level, topic, detail, caller)

outpack_log_info(object, topic, detail, caller)

outpack_log_debug(object, topic, detail, caller)

outpack_log_trace(object, topic, detail, caller)
}
\arguments{
\item{object}{Either an \code{outpack_packet} or \code{outpack_root} object;
anything else is an error for now.}

\item{log_level}{A log level; one of \code{info}, \code{debug} or \code{trace} in
increasing order of verbosity (\code{trace} being a superset of
\code{debug}, which is a superset of \code{info}). There is no \code{warning}
or \code{error} log level}

\item{topic}{A short string (less than 10 characters) as the title
of the action.}

\item{detail}{A character vector of any length to be used as
detail for the logs. If you provide a single string this \emph{will}
be unboxed in the final JSON. If you want to force an array of
strings, use \code{I()} around the value here (see
\link[jsonlite:fromJSON]{jsonlite::toJSON}'s documentation on \code{auto_unbox})}

\item{caller}{The name of the calling function; include the
package name here.}
}
\value{
Nothing, this is called for its side effects
}
\description{
Create a log entry from outpack. This can be used to either log at
the packet level (in which case \code{object} should be a packet
object) or root level (in which case pass a root). What is
actually printed to the screen or log files depends on the
thresholds and settings in the root and console. The functions
\code{outpack_log_info}, \code{outpack_log_debug} and outpack_log_trace\verb{are convenience wrappers around}outpack_log` and should be preferred.
}
